!function(t){var e=function(t,e){var o=e||{},n=o.bufferLen||4096;this.context=t.context,this.context.createScriptProcessor?this.node=this.context.createScriptProcessor(n,2,2):this.node=this.context.createJavaScriptNode(n,2,2);var a=new Worker(o.workerPath||"static/_static/live/js/recorderjs/recorderWorker.min.js");a.postMessage({command:"init",config:{sampleRate:this.context.sampleRate}});var r,c=!1;this.node.onaudioprocess=function(t){c&&a.postMessage({command:"record",buffer:[t.inputBuffer.getChannelData(0),t.inputBuffer.getChannelData(1)]})},this.configure=function(t){for(var e in t)t.hasOwnProperty(e)&&(o[e]=t[e])},this.record=function(){c=!0},this.stop=function(){c=!1},this.clear=function(){a.postMessage({command:"clear"})},this.getBuffers=function(t){r=t||o.callback,a.postMessage({command:"getBuffers"})},this.exportWAV=function(t,e){if(r=t||o.callback,e=e||o.type||"audio/wav",!r)throw new Error("Callback not set");a.postMessage({command:"exportWAV",type:e})},this.exportMonoWAV=function(t,e){if(r=t||o.callback,e=e||o.type||"audio/wav",!r)throw new Error("Callback not set");a.postMessage({command:"exportMonoWAV",type:e})},a.onmessage=function(t){var e=t.data;r(e)},t.connect(this.node),this.node.connect(this.context.destination)};e.setupDownload=function(e,o){var n=(t.URL||t.webkitURL).createObjectURL(e),a=document.getElementById("save");a.href=n,a.download=o||"output.wav"},t.Recorder=e}(window);